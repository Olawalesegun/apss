@{
    Layout = "Layout/Generic";
    ViewData["Title"] = Context.GetCurrentDashboardRoute()?.Name;

    @if (User.Identity?.IsAuthenticated != true)
    {
        Context.NavigateTo(Routes.Auth.SignIn);

        IgnoreSection("styles");
        IgnoreSection("scripts");
        IgnoreBody();

        return;
    }
}

<!-- main div  -->
<div class="row m-0">
    <aside class="d-flex flex-column col-xs-12 col-md-4 col-lg-3 col-xl-2 py-2 bg-light">
        <div class="d-flex justify-content-between">
            <a href="@Routes.Dashboard.Home" class="d-flex align-items-center link-dark text-decoration-none">
                <div class="bg-primary text-light p-2 me-2 rounded-3">
                    @Icon.Wheat.Render(IconSize.ExtraLarge)
                </div>
                <p class="fs-3 fw-light mb-0">APSS</p>
            </a>
            <buttn class="btn btn-light d-inline-block d-md-none" onclick="toggleSideNav()">
                @Icon.Bars.Render(IconSize.Large)
            </buttn>
        </div>
        <div id="side-nav" class="d-none d-md-block flex-md-fill">
            <hr />
            @await Html.PartialAsync("Layout/_SideNav")
        </div>
    </aside>
    <main class="col-xs-12 col-md-8 col-lg-9 col-xl-10 min-vh-100" id="main-content">
        @await Html.PartialAsync("Layout/_NavBar")

        @if (Context.GetCurrentRoute() is CrudRoute)
        {
            @await Html.PartialAsync("Layout/_ToolBar")
        }

        @await Html.PartialAsync("_Notification")
        @RenderBody()
    </main>
</div>

@section styles {
    <link rel="stylesheet" href="/assets/css/dashboard.css" />
    @await RenderSectionAsync("styles", required: false)
}

@section scripts {
    <script src="~/assets/js/dashboard.js"></script>
    <script src="~/js/modelFunction.js"></script>
    @await RenderSectionAsync("scripts", required: false)
}