@model LandProductDto
@{
    ViewData["Title"] = "Land Product Information";
}

<div class="card mt-2 border-0">
    <div class="d-inline">
    </div>
    <div class="card-body">
        <div class="d-flex ">

            <h3>Land Product Information</h3>
        </div>
        <table class="table user-view-table m-0 border">
            <tbody>
                <tr>
                    <td>@Html.DisplayNameFor(i => i.Id)</td>
                    <td>@Model?.Id</td>
                </tr>
                <tr class="">
                    <td>@Html.DisplayNameFor(c => c.CropName)</td>
                    <td>@Model?.CropName</td>
                </tr>
                <tr>
                    <td>@Html.DisplayNameFor(c => c.Category)</td>
                    <td>@Model?.Category</td>
                </tr>
                <tr>
                    <td>@Html.DisplayNameFor(q => q.Quantity)</td>
                    <td>@Model?.Quantity</td>
                </tr>
                <tr>
                    <td>@Html.DisplayNameFor(f => f.Fertilizer)</td>
                    <td>@Model?.Fertilizer</td>
                </tr>
                <tr>
                    <td>@Html.DisplayNameFor(h => h.HarvestStart)</td>
                    <td>@Model?.HarvestStart</td>
                </tr>
                <tr>
                    <td>@Html.DisplayNameFor(h => h.HarvestEnd)</td>
                    <td>@Model?.HarvestEnd</td>
                </tr>
                @if (@Model?.HasGreenhouse == true)
                {
                    <tr>
                        <td>@Html.DisplayNameFor(h => h.HasGreenhouse)</td>
                        <td>It has</td>
                    </tr>
                }
                else
                {
                    <tr>
                        <td>@Html.DisplayNameFor(h => h.HasGreenhouse)</td>
                        <td>It has not</td>
                    </tr>
                }
                <tr>
                    <td>@Html.DisplayNameFor(i => i.Insecticide)</td>
                    <td>@Model?.Insecticide</td>
                </tr>
                <tr>
                    <td>@Html.DisplayNameFor(i => i.IrrigationCount)</td>
                    <td>@Model?.IrrigationCount</td>
                </tr>
                <tr>
                    <td>@Html.DisplayNameFor(i => i.IrrigationMethod)</td>
                    <td>@Model?.IrrigationMethod</td>
                </tr>
                <tr>
                    <td>@Html.DisplayNameFor(i => i.IrrigationPowerSource)</td>
                    <td>@Model?.IrrigationPowerSource</td>
                </tr>
                <tr>
                    <td>@Html.DisplayNameFor(i => i.IrrigationWaterSource)</td>
                    <td>@Model?.IrrigationWaterSource</td>
                </tr>
                <tr>
                    <td>@Html.DisplayNameFor(s => s.StoringMethod)</td>
                    <td>@Model?.StoringMethod</td>
                </tr>
                @if (@Model?.IsGovernmentFunded == true)
                {
                    <tr>
                        <td>@Html.DisplayNameFor(h => h.IsGovernmentFunded)</td>
                        <td>It is</td>
                    </tr>
                }
                else
                {
                    <tr>
                        <td>@Html.DisplayNameFor(h => h.IsGovernmentFunded)</td>
                        <td>It is not</td>
                    </tr>
                }
                <tr>
                    <td>@Html.DisplayNameFor(p => p.ProducedIn)</td>
                    <td>@Model?.ProducedIn?.Name</td>
                </tr>
                <tr>
                    <td>@Html.DisplayNameFor(p => p.Unit)</td>
                    <td>@Model?.Unit.Name</td>
                </tr>
                <tr>
                    <td>@Html.DisplayNameFor(p => p.Producer)</td>
                    <td>@Model?.Producer?.Name</td>
                </tr>
                <tr>
                    <td>@Html.DisplayNameFor(p => p.AddedBy)</td>
                    <td>@Model?.AddedBy?.Name</td>
                </tr>
                <tr>
                    <td>@Html.DisplayNameFor(p => p.CreatedAt)</td>
                    <td>@Model?.CreatedAt</td>
                </tr>
                <tr>
                    <td>@Html.DisplayNameFor(p => p.ModifiedAt)</td>
                    <td>@Model?.ModifiedAt</td>
                </tr>
            </tbody>
        </table>
        <br />
        <div class="table-responsive">
            <div class="mx-lg-2 mx-sm-1 mx-sm-1 my-1 d-flex d-flex justify-content-end">
                <a class="btn btn-outline-primary text-decoration-none mx-1 " href="@(Routes.Dashboard.Lands.Expenses.Add)?id=@Model!.Id"><span class="me-1">@Icon.Plus.Render() Add Expense </span>  </a>
                <a class="btn btn-outline-primary text-decoration-none mx-1 " href="@(Routes.Dashboard.Lands.Expenses.byLand)?id=@Model!.Id"><span class="me-1">@Icon.Seeding.Render() Expenses</span>  </a>
                <a class="btn btn-outline-primary mx-1 " href="@(Routes.Dashboard.Lands.Products.Update.FullPath)?id=@Model!.Id">@Icon.Pen.Render()<span class="ms-1">Edit</span> </a>
                <a class="btn btn-danger mx-1 " onclick="showDeletionModal('Are you sure you want to delete Product `@Model.CropName`?', @Model.Id)" ">@Icon.TrashCan.Render()<span>Delete</span>  </a>
            </div>
        </div>
    </div>
</div>
@await Html.DeleteDialogAsync()