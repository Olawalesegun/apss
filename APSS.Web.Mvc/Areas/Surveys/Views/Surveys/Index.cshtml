
@model CrudViewModel<SurveyDto>

        <div class="table-rsponsive">
    <table class="table table-hover">
        <thead class="table-light">
            <tr>
                <th>@Icon.Hashtag.Render()</th>
                <th>@Html.DisplayNameFor(m => m.First().Name)</th>
                <th>@Html.DisplayNameFor(m => m.First().ExpirationDate)</th>
                <th>@Html.DisplayNameFor(m => m.First().IsActive)</th>
                <th>@Html.DisplayNameFor(m => m.First().CreatedAt)</th>
                <th></th>
            </tr>
        </thead>
        <tbody>

            @foreach (var item in Model)
            {
                <tr>
                    <td>@item.Id</td>
                    <td>@item.Name</td>
                    <td>@item.ExpirationDate</td>
                    <td>@item.IsActive</td>
                    <td>@item.CreatedAt</td>

                    <td class="align-middle center">
                        <div class=" dropdown">
                            <a href="#" data-bs-toggle="dropdown" aria-expanded="false">
                                @Icon.Bars.Render()
                            </a>
                            <ul class="dropdown-menu">
                                <li>
                                    <a class="dropdown-item justified-content" href="@(Routes.Dashboard.Surveys.Surveys.Details)?id=@item.Id">
                                        Details @Icon.Info.Render()
                                    </a>
                                </li>
                                <li>
                                    <a class="dropdown-item justified-content" onclick="showDeletionModal('Are you sure you want to delete Surveys `@item.Name`?', @item.Id)">
                                        Delete @Icon.TrashCan.Render()
                                    </a>
                                </li>
                                <li>
                                    <a class="dropdown-item justified-content" href="@(Routes.Dashboard.Surveys.Surveys.Update)?id=@item.Id" >
                                        Update @Icon.Pen.Render()
                                    </a>
                                </li>
                                <li><hr class="dropdown-divider"></li>
                                <li>
                                    <a class="dropdown-item justified-content" href="@(Routes.Dashboard.Surveys.Entries)?id=@item.Id">
                                        Manage Entries  @Icon.UsersGear.Render()
                                    </a>
                                </li>
                                <li>
                                    <a class="dropdown-item justified-content" href="@(Routes.Dashboard.Surveys.Questions)?id=@item.Id">
                                        Manage Questions  @Icon.UsersGear.Render()
                                    </a>
                                </li>
                                <li>
                                    <a class="dropdown-item d-flex justified-content-between" href="@(Routes.Dashboard.Surveys.Questions.Add)?id=@item.Id">
                                        <span>Add Question</span>  <span>@Icon.UserPlus.Render()</span>
                                    </a>
                                </li>
                            </ul>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<partial name="Layout/Paginator" model="@Model.Params.Page" />
@await Html.DeleteDialogAsync()